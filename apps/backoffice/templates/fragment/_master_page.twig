{% macro master_page(meta, values, target) %}
    {% import 'fragment/_modal_form.twig' as modal_form %}

    <h2>{{ meta.title }}</h2>
    <p>{{ meta.description }}.</p>
    
    <div class="container">
        <div class="actions">
            <div>
            {% for action in meta.actions %}
                {% if not action.contextual %}
                    <button class="btn btn-{{ action.kind }}" onclick="run('{{ action.name }}')">{{ action.label }}</button>
                {% endif %}
            {% endfor %}
            </div>
            <input id="globalSearch" type="search" class="search text-search" placeholder="Buscar...">
        </div>
        
        {% if meta.filters %}
        <div class="filters">
            {% for filter in meta.filters %}
            <div class="filter-group">
                <label for="{{filter.name}}Filter">{{ meta.fields[filter.name].label }}:</label>
                {% if meta.fields[filter.name].type == 'options' %}
                <select id="{{filter.name}}Filter" onchange="search()">
                    <option value="">Todos</option>
                    {% for k, v in meta.fields[filter.name].options %}
                    <option value="{{k}}">{{v}}</option>
                    {% endfor %}
                </select>
                {% else %}
                <input id="{{filter.name}}Filter" type="search" class="text-search" />
                {% endif %}
            </div>
            {% endfor %}
        </div>
        {% endif %}

        <table id="tableContent">
            <thead>
                <tr>
                    {% for column in meta.columns %}
                    <th>{{ column.label }}</th>
                    {% endfor %}
                    <th class="cell-actions">Acciones</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>

    {% for action in meta.actions %}
    <!-- Modal de confirmación para {{ action.label }} -->
    <div id="{{action.name}}Modal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Confirmar {{ action.label }}</h3>
                <span class="close" onclick="closeA{{ action.name }}Modal()">&times;</span>
            </div>
            {% if action.template %}
                <input type="hidden" name="{{ action.name }}" id="{{ action.name }}" />
                {{ action.template | raw }}
            {% elseif action.form %}
                <form method="POST" action="{{ path(target) }}">
                    {{ modal_form.modal_form( action.name, meta, action.form) }}
                </form>
            {% else %}
            <form method="POST" action="{{ path(target) }}">
                <div class="modal-body">
                    <input type="hidden" name="{{ action.name }}" id="{{ action.name }}" />
                    <p>¿Estás seguro de que deseas {{ action.label }}?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn" onclick="closeA{{ action.name }}Modal()">Cancelar</button>
                    <button type="submit" class="btn btn-danger">{{ action.label }}</button>
                </div>
            </form>
            {% endif %}
        </div>
    </div>
    {% endfor %}

    <script>
    // Datos de ejemplo (en una aplicación real, estos vendrían de una base de datos)
    const values = [
        {% for value in values %}
        {
            {{ meta.id }}: "{{ value[meta.id] }}",
            {% for field in meta.fields %}
                {% if field.type == 'date' %}
                {{ field.name }}: "{{ value[field.name] |date('Y-m-d') }}",
                {% else %}
                {{ field.name }}: "{{ value[field.name] }}",
                {% endif %}
            {% endfor %}
        },
        {% endfor %}
    ];

    function load(values, forEmpty) {
        const table = document.getElementById('tableContent');
        const tbody = table.querySelector('tbody');
        const thead = table.querySelector('thead tr');
        tbody.innerHTML = ''; 
        const columnCount = thead ? thead.children.length : 1;
        if (!values || values.length === 0) {
            const tr = document.createElement('tr');
            const td = document.createElement('td');
            td.colSpan = columnCount;
            td.style.textAlign = 'center';
            td.textContent = forEmpty;
            tr.appendChild(td);
            tbody.appendChild(tr);
            return;
        }

        values.forEach(item => {
            const tr = document.createElement('tr');
            
            {% for column in meta.columns %}
                const td{{column.name}} = document.createElement('td');
                {% if meta.fields[column.name].type == 'date' %}
                const [yyyy{{column.name}}, mm{{column.name}}, dd{{column.name}}] = item.{{column.name}}.split('-');
                td{{column.name}}.textContent = `${dd{{column.name}}}-${mm{{column.name}}}-${yyyy{{column.name}}}`;
                {% else %}
                td{{column.name}}.textContent = item.{{column.name}};
                {% endif %}
                tr.appendChild(td{{column.name}});
            {% endfor %}

            // Acciones
            const tdActions = document.createElement('td');
            tdActions.className = 'cell-actions';

            const actions = [
                {% for action in meta.actions %}
                {% if action.contextual %}
                    { label: '{{action.label}}', action: '{{action.name}}', class: 'btn-{{ action.kind }}' },
                {% endif %}
                {% endfor %}
            ];

            actions.forEach(({ label, action, class: btnClass }) => {
                const btn = document.createElement('button');
                btn.className = `btn btn-small ${btnClass}`;
                btn.textContent = label;
                btn.onclick = () => run(action, item.id);
                tdActions.appendChild(btn);
            });

            tr.appendChild(tdActions);
            tbody.appendChild(tr);
        });
    }

    load( values, 'No hay valores registradas' );

    function run(modal, element) {
        const value = element ? values.find(val => val.{{ meta.id }} === element) : null;
        {% for action in meta.actions %}
            {% if action.form %}
            {{ modal_form.assign( action.name, meta, action.form) }}
            {% else %}
            document.getElementById('{{action.name}}').value = element;
            {% if action.code %}
                {{ action.code | raw }}
            {% endif %}
            {% endif %}
        {% endfor %}
        document.getElementById( modal + 'Modal').style.display = 'flex';
    }

    const searchInputs = document.querySelectorAll('.text-search');
    let debounceTimer;

    searchInputs.forEach(input => {
        input.addEventListener('input', () => {
            clearTimeout(debounceTimer);
            debounceTimer = setTimeout(() => {
                search(); // o search(input.value) si necesitas el valor individual
            }, 300);
        });
    });

    function search() {
        load(values.filter( this.filter ), (!values || values.length === 0) ? 'No hay registos' : 'No se encuentran coincidencias');
    }

    function filter(item) {
        const searchInput = document.getElementById('globalSearch');
        const term = searchInput.value;
        let match = true;
        if( search ) {
            match = match && (
                {% for field in meta.fields %}
                    {% if field.type == 'password' %}
                    {% else %}
                    ( item.{{ field.name }} || '').toLowerCase().includes(term) ||
                    {% endif %}
                {% endfor %}
                false
            );
        }
        {% for filter in meta.filters %}
        const {{filter.name}}Value = document.getElementById('{{filter.name}}Filter').value;
        if( {{filter.name}}Value ) {
            match = match && {{filter.name}}Value == item.{{filter.name}};
        }
        {% endfor %}
        return match;
    }

    {% for action in meta.actions %}
        {% if action.functions %}
            {{ action.functions | raw }}
        {% endif %}
        function closeA{{action.name}}Modal() {
            document.getElementById('{{action.name}}Modal').style.display = 'none';
        }
    {% endfor %}
    
    // Cerrar los modales si se hace clic fuera de ellos
    window.onclick = function(event) {
        {% for action in meta.actions %}
        if (event.target === document.getElementById('{{ action.name}}Modal')) {
            closeA{{action.name}}Modal();
        }
        {% endfor %}
    };
</script>
{% endmacro %}